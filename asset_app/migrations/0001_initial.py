# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2018-07-13 16:39
from __future__ import unicode_literals

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_no', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('is_abstractor', models.BooleanField(default=False)),
                ('is_watershed', models.BooleanField(default=False)),
                ('is_operations', models.BooleanField(default=False)),
                ('is_licensing', models.BooleanField(default=False)),
                ('is_management', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Computer',
            fields=[
                ('comp_no', models.CharField(max_length=12, primary_key=True, serialize=False)),
                ('brand', models.CharField(max_length=45)),
                ('model', models.CharField(blank=True, max_length=45, null=True)),
                ('serial_no', models.CharField(blank=True, max_length=45, null=True)),
                ('comp_type', models.CharField(choices=[('Desktop', 'Desktop'), ('Laptop', 'Laptop'), ('Server', 'Server'), ('Printer', 'Printer'), ('Television', 'Television')], max_length=45)),
                ('value', models.FloatField(blank=True, null=True)),
                ('lifespan', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('date_comm', models.DateField(blank=True, null=True)),
                ('date_decomm', models.DateField(blank=True, null=True)),
                ('section', models.CharField(blank=True, choices=[('Administration', 'Administration'), ('Asset North', 'Asset North'), ('Asset South', 'Asset South'), ('GIS', 'GIS'), ('HOD', 'HOD'), ('IT', 'IT'), ('Licensing', 'Licensing'), ('Operations', 'Operations'), ('Planning', 'Planning'), ('Tobago', 'Tobago'), ('Watershed', 'Watershed')], max_length=80, null=True)),
                ('needs_attn', models.BooleanField(default=False)),
                ('remarks', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('emp_no', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=128)),
                ('last_name', models.CharField(max_length=128)),
                ('dob', models.DateField(blank=True, null=True)),
                ('designation', models.TextField(blank=True, null=True)),
                ('salary_range', models.CharField(blank=True, max_length=12, null=True)),
                ('date_start', models.DateField(blank=True, null=True)),
                ('date_end', models.DateField(blank=True, null=True)),
                ('category', models.CharField(max_length=45, null=True)),
                ('section', models.CharField(blank=True, choices=[('Administration', 'Administration'), ('Asset North', 'Asset North'), ('Asset South', 'Asset South'), ('GIS', 'GIS'), ('HOD', 'HOD'), ('IT', 'IT'), ('Licensing', 'Licensing'), ('Operations', 'Operations'), ('Planning', 'Planning'), ('Tobago', 'Tobago'), ('Watershed', 'Watershed')], max_length=80, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('quantity', models.PositiveSmallIntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('storage', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('vim', models.CharField(max_length=45, primary_key=True, serialize=False)),
                ('licence_plate', models.CharField(max_length=12)),
                ('model', models.CharField(max_length=45)),
                ('value', models.FloatField(blank=True, null=True)),
                ('lifespan', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('date_comm', models.DateField(blank=True, null=True)),
                ('date_decomm', models.DateField(blank=True, null=True)),
                ('section', models.CharField(blank=True, choices=[('Administration', 'Administration'), ('Asset North', 'Asset North'), ('Asset South', 'Asset South'), ('GIS', 'GIS'), ('HOD', 'HOD'), ('IT', 'IT'), ('Licensing', 'Licensing'), ('Operations', 'Operations'), ('Planning', 'Planning'), ('Tobago', 'Tobago'), ('Watershed', 'Watershed')], max_length=80, null=True)),
                ('needs_attn', models.BooleanField(default=False)),
                ('remarks', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='computer',
            name='emp_no',
            field=models.ForeignKey(blank=True, db_column='emp_no', null=True, on_delete=django.db.models.deletion.CASCADE, to='asset_app.Employee'),
        ),
    ]
